#include <zeno/Core/Keyboard.hpp>
#include <zeno/Window/Window.hpp>
#include <GLFW/glfw3.h>

namespace ze {

    bool Keyboard::isKeyPressed(Key _key, const Window& _window) {
        return glfwGetKey(static_cast<GLFWwindow*>(_window.getHandle()), zenoToGlfwKey(_key)) == GLFW_PRESS;
    }

    int Keyboard::zenoToGlfwKey(Key _key) {
        switch (_key) {
        case Key::A:                    return GLFW_KEY_A;
        case Key::B:                    return GLFW_KEY_B;
        case Key::C:                    return GLFW_KEY_C;
        case Key::D:                    return GLFW_KEY_D;
        case Key::E:                    return GLFW_KEY_E;
        case Key::F:                    return GLFW_KEY_F;
        case Key::G:                    return GLFW_KEY_G;
        case Key::H:                    return GLFW_KEY_H;
        case Key::I:                    return GLFW_KEY_I;
        case Key::J:                    return GLFW_KEY_J;
        case Key::K:                    return GLFW_KEY_K;
        case Key::L:                    return GLFW_KEY_L;
        case Key::M:                    return GLFW_KEY_M;
        case Key::N:                    return GLFW_KEY_N;
        case Key::O:                    return GLFW_KEY_O;
        case Key::P:                    return GLFW_KEY_P;
        case Key::Q:                    return GLFW_KEY_Q;
        case Key::R:                    return GLFW_KEY_R;
        case Key::S:                    return GLFW_KEY_S;
        case Key::T:                    return GLFW_KEY_T;
        case Key::U:                    return GLFW_KEY_U;
        case Key::V:                    return GLFW_KEY_V;
        case Key::W:                    return GLFW_KEY_W;
        case Key::X:                    return GLFW_KEY_X;
        case Key::Y:                    return GLFW_KEY_Y;
        case Key::Z:                    return GLFW_KEY_Z;
        case Key::Num0:                 return GLFW_KEY_0;
        case Key::Num1:                 return GLFW_KEY_1;
        case Key::Num2:                 return GLFW_KEY_2;
        case Key::Num3:                 return GLFW_KEY_3;
        case Key::Num4:                 return GLFW_KEY_4;
        case Key::Num5:                 return GLFW_KEY_5;
        case Key::Num6:                 return GLFW_KEY_6;
        case Key::Num7:                 return GLFW_KEY_7;
        case Key::Num8:                 return GLFW_KEY_8;
        case Key::Num9:                 return GLFW_KEY_9;
        case Key::Escape:               return GLFW_KEY_ESCAPE;
        case Key::LControl:             return GLFW_KEY_LEFT_CONTROL;
        case Key::LShift:               return GLFW_KEY_LEFT_SHIFT;
        case Key::LAlt:                 return GLFW_KEY_LEFT_ALT;
        case Key::LSystem:              return GLFW_KEY_LEFT_SUPER;
        case Key::RControl:             return GLFW_KEY_RIGHT_CONTROL;
        case Key::RShift:               return GLFW_KEY_RIGHT_SHIFT;
        case Key::RAlt:                 return GLFW_KEY_RIGHT_ALT;
        case Key::RSystem:              return GLFW_KEY_RIGHT_SUPER;
        case Key::Menu:                 return GLFW_KEY_MENU;
        case Key::LBracket:             return GLFW_KEY_LEFT_BRACKET;
        case Key::RBracket:             return GLFW_KEY_RIGHT_BRACKET;
        case Key::SemiColon:            return GLFW_KEY_SEMICOLON;
        case Key::Comma:                return GLFW_KEY_COMMA;
        case Key::Fullstop:             return GLFW_KEY_PERIOD;
        case Key::Quote:                return GLFW_KEY_APOSTROPHE;
        case Key::ForwardSlash:         return GLFW_KEY_SLASH;
        case Key::BackwardSlash:        return GLFW_KEY_BACKSLASH;
        case Key::Tilde:                return GLFW_KEY_GRAVE_ACCENT;
        case Key::Equals:               return GLFW_KEY_EQUAL;
        case Key::Hyphen:               return GLFW_KEY_MINUS;
        case Key::Space:                return GLFW_KEY_SPACE;
        case Key::Enter:                return GLFW_KEY_ENTER;
        case Key::BackSpace:            return GLFW_KEY_BACKSPACE;
        case Key::Tab:                  return GLFW_KEY_TAB;
        case Key::PageUp:               return GLFW_KEY_PAGE_UP;
        case Key::PageDown:             return GLFW_KEY_PAGE_DOWN;
        case Key::End:                  return GLFW_KEY_END;
        case Key::Home:                 return GLFW_KEY_HOME;
        case Key::Insert:               return GLFW_KEY_INSERT;
        case Key::Delete:               return GLFW_KEY_DELETE;
        case Key::Add:                  return GLFW_KEY_KP_ADD;
        case Key::Subtract:             return GLFW_KEY_KP_SUBTRACT;
        case Key::Multiply:             return GLFW_KEY_KP_MULTIPLY;
        case Key::Divide:               return GLFW_KEY_KP_DIVIDE;
        case Key::Left:                 return GLFW_KEY_LEFT;
        case Key::Right:                return GLFW_KEY_RIGHT;
        case Key::Up:                   return GLFW_KEY_UP;
        case Key::Down:                 return GLFW_KEY_DOWN;
        case Key::Numpad0:              return GLFW_KEY_KP_0;
        case Key::Numpad1:              return GLFW_KEY_KP_1;
        case Key::Numpad2:              return GLFW_KEY_KP_2;
        case Key::Numpad3:              return GLFW_KEY_KP_3;
        case Key::Numpad4:              return GLFW_KEY_KP_4;
        case Key::Numpad5:              return GLFW_KEY_KP_5;
        case Key::Numpad6:              return GLFW_KEY_KP_6;
        case Key::Numpad7:              return GLFW_KEY_KP_7;
        case Key::Numpad8:              return GLFW_KEY_KP_8;
        case Key::Numpad9:              return GLFW_KEY_KP_9;
        case Key::F1:                   return GLFW_KEY_F1;
        case Key::F2:                   return GLFW_KEY_F2;
        case Key::F3:                   return GLFW_KEY_F3;
        case Key::F4:                   return GLFW_KEY_F4;
        case Key::F5:                   return GLFW_KEY_F5;
        case Key::F6:                   return GLFW_KEY_F6;
        case Key::F7:                   return GLFW_KEY_F7;
        case Key::F8:                   return GLFW_KEY_F8;
        case Key::F9:                   return GLFW_KEY_F9;
        case Key::F10:                  return GLFW_KEY_F10;
        case Key::F11:                  return GLFW_KEY_F11;
        case Key::F12:                  return GLFW_KEY_F12;
        case Key::F13:                  return GLFW_KEY_F13;
        case Key::F14:                  return GLFW_KEY_F14;
        case Key::F15:                  return GLFW_KEY_F15;
        case Key::Pause:                return GLFW_KEY_PAUSE;
        case Key::Unknown: default:     return GLFW_KEY_UNKNOWN;
        }
    }

    Keyboard::Key Keyboard::glfwToZenoKey(int _key) {
        switch (_key) {
        case GLFW_KEY_A:                    return Key::A;
        case GLFW_KEY_B:                    return Key::B;
        case GLFW_KEY_C:                    return Key::C;
        case GLFW_KEY_D:                    return Key::D;
        case GLFW_KEY_E:                    return Key::E;
        case GLFW_KEY_F:                    return Key::F;
        case GLFW_KEY_G:                    return Key::G;
        case GLFW_KEY_H:                    return Key::H;
        case GLFW_KEY_I:                    return Key::I;
        case GLFW_KEY_J:                    return Key::J;
        case GLFW_KEY_K:                    return Key::K;
        case GLFW_KEY_L:                    return Key::L;
        case GLFW_KEY_M:                    return Key::M;
        case GLFW_KEY_N:                    return Key::N;
        case GLFW_KEY_O:                    return Key::O;
        case GLFW_KEY_P:                    return Key::P;
        case GLFW_KEY_Q:                    return Key::Q;
        case GLFW_KEY_R:                    return Key::R;
        case GLFW_KEY_S:                    return Key::S;
        case GLFW_KEY_T:                    return Key::T;
        case GLFW_KEY_U:                    return Key::U;
        case GLFW_KEY_V:                    return Key::V;
        case GLFW_KEY_W:                    return Key::W;
        case GLFW_KEY_X:                    return Key::X;
        case GLFW_KEY_Y:                    return Key::Y;
        case GLFW_KEY_Z:                    return Key::Z;
        case GLFW_KEY_0:                    return Key::Num0;
        case GLFW_KEY_1:                    return Key::Num1;
        case GLFW_KEY_2:                    return Key::Num2;
        case GLFW_KEY_3:                    return Key::Num3;
        case GLFW_KEY_4:                    return Key::Num4;
        case GLFW_KEY_5:                    return Key::Num5;
        case GLFW_KEY_6:                    return Key::Num6;
        case GLFW_KEY_7:                    return Key::Num7;
        case GLFW_KEY_8:                    return Key::Num8;
        case GLFW_KEY_9:                    return Key::Num9;
        case GLFW_KEY_ESCAPE:               return Key::Escape;
        case GLFW_KEY_LEFT_CONTROL:         return Key::LControl;
        case GLFW_KEY_LEFT_SHIFT:           return Key::LShift;
        case GLFW_KEY_LEFT_ALT:             return Key::LAlt;
        case GLFW_KEY_LEFT_SUPER:           return Key::LSystem;
        case GLFW_KEY_RIGHT_CONTROL:        return Key::RControl;
        case GLFW_KEY_RIGHT_SHIFT:          return Key::RShift;
        case GLFW_KEY_RIGHT_ALT:            return Key::RAlt;
        case GLFW_KEY_RIGHT_SUPER:          return Key::RSystem;
        case GLFW_KEY_MENU:                 return Key::Menu;
        case GLFW_KEY_LEFT_BRACKET:         return Key::LBracket;
        case GLFW_KEY_RIGHT_BRACKET:        return Key::RBracket;
        case GLFW_KEY_SEMICOLON:            return Key::SemiColon;
        case GLFW_KEY_COMMA:                return Key::Comma;
        case GLFW_KEY_PERIOD:               return Key::Fullstop;
        case GLFW_KEY_APOSTROPHE:           return Key::Quote;
        case GLFW_KEY_SLASH:                return Key::ForwardSlash;
        case GLFW_KEY_BACKSLASH:            return Key::BackwardSlash;
        case GLFW_KEY_GRAVE_ACCENT:         return Key::Tilde;
        case GLFW_KEY_EQUAL:                return Key::Equals;
        case GLFW_KEY_MINUS:                return Key::Hyphen;
        case GLFW_KEY_SPACE:                return Key::Space;
        case GLFW_KEY_ENTER:                return Key::Enter;
        case GLFW_KEY_BACKSPACE:            return Key::BackSpace;
        case GLFW_KEY_TAB:                  return Key::Tab;
        case GLFW_KEY_PAGE_UP:              return Key::PageUp;
        case GLFW_KEY_PAGE_DOWN:            return Key::PageDown;
        case GLFW_KEY_END:                  return Key::End;
        case GLFW_KEY_HOME:                 return Key::Home;
        case GLFW_KEY_INSERT:               return Key::Insert;
        case GLFW_KEY_DELETE:               return Key::Delete;
        case GLFW_KEY_KP_ADD:               return Key::Add;
        case GLFW_KEY_KP_SUBTRACT:          return Key::Subtract;
        case GLFW_KEY_KP_MULTIPLY:          return Key::Multiply;
        case GLFW_KEY_KP_DIVIDE:            return Key::Divide;
        case GLFW_KEY_LEFT:                 return Key::Left;
        case GLFW_KEY_RIGHT:                return Key::Right;
        case GLFW_KEY_UP:                   return Key::Up;
        case GLFW_KEY_DOWN:                 return Key::Down;
        case GLFW_KEY_KP_0:                 return Key::Numpad0;
        case GLFW_KEY_KP_1:                 return Key::Numpad1;
        case GLFW_KEY_KP_2:                 return Key::Numpad2;
        case GLFW_KEY_KP_3:                 return Key::Numpad3;
        case GLFW_KEY_KP_4:                 return Key::Numpad4;
        case GLFW_KEY_KP_5:                 return Key::Numpad5;
        case GLFW_KEY_KP_6:                 return Key::Numpad6;
        case GLFW_KEY_KP_7:                 return Key::Numpad7;
        case GLFW_KEY_KP_8:                 return Key::Numpad8;
        case GLFW_KEY_KP_9:                 return Key::Numpad9;
        case GLFW_KEY_F1:                   return Key::F1;
        case GLFW_KEY_F2:                   return Key::F2;
        case GLFW_KEY_F3:                   return Key::F3;
        case GLFW_KEY_F4:                   return Key::F4;
        case GLFW_KEY_F5:                   return Key::F5;
        case GLFW_KEY_F6:                   return Key::F6;
        case GLFW_KEY_F7:                   return Key::F7;
        case GLFW_KEY_F8:                   return Key::F8;
        case GLFW_KEY_F9:                   return Key::F9;
        case GLFW_KEY_F10:                  return Key::F10;
        case GLFW_KEY_F11:                  return Key::F11;
        case GLFW_KEY_F12:                  return Key::F12;
        case GLFW_KEY_F13:                  return Key::F13;
        case GLFW_KEY_F14:                  return Key::F14;
        case GLFW_KEY_F15:                  return Key::F15;
        case GLFW_KEY_PAUSE:                return Key::Pause;
        case GLFW_KEY_UNKNOWN: default:     return Key::Unknown;
        }
    }
}

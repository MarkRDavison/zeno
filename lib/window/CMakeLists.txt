# CMake build : library

#configure variables
SET(MODULE_NAME "window")
SET(LIB_NAME "zeno-${MODULE_NAME}${LIBRARY_EXTENSION}")

#configure directories
set (LIBRARY_MODULE_PATH "${PROJECT_SOURCE_DIR}/lib/${MODULE_NAME}")
set (LIBRARY_SRC_PATH "${LIBRARY_MODULE_PATH}/src" )
set (LIBRARY_INCLUDE_PATH "${LIBRARY_MODULE_PATH}/include")

#set sources
file (GLOB_RECURSE LIB_HEADER_FILES "${LIBRARY_INCLUDE_PATH}/*.hpp")
file (GLOB_RECURSE LIB_SOURCE_FILES "${LIBRARY_SRC_PATH}/*.cpp")


#set library
add_library (${LIB_NAME} ${LIB_SOURCE_FILES} ${LIB_HEADER_FILES})
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE glfw)
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE libglew_static)
target_include_directories(${LIB_NAME} PUBLIC ${LIBRARY_INCLUDE_PATH})
target_include_directories(${LIB_NAME} PUBLIC "${PROJECT_SOURCE_DIR}/lib/core/include")
#target_include_directories(${LIB_NAME} PUBLIC ${GLFW_INCLUDE_DIRS})
#target_include_directories(${LIB_NAME} PUBLIC "${PROJECT_SOURCE_DIR}/lib/window/include")

#export vars
SET(LIBRARY_INCLUDE_PATH_WINDOW ${LIBRARY_INCLUDE_PATH} PARENT_SCOPE)
SET(LIB_NAME_WINDOW ${LIB_NAME} PARENT_SCOPE)

INSTALL(TARGETS ${LIB_NAME} DESTINATION ${LIBRARY_INSTALL_FOLDER})

IF (BUILD_SHARED_LIBS)
INSTALL(FILES $<TARGET_PDB_FILE:${LIB_NAME}> DESTINATION ${LIBRARY_INSTALL_FOLDER} OPTIONAL)
ELSEIF (BUILD_SHARED_LIBS)
INSTALL(FILES $<TARGET_COMPILE_PDB_FILE:${LIB_NAME}> DESTINATION ${LIBRARY_INSTALL_FOLDER} OPTIONAL)
ENDIF()


INSTALL(FILES ${LIB_HEADER_FILES} DESTINATION "include/zeno/${MODULE_NAME}")
INSTALL(FILES "${LIBRARY_INCLUDE_PATH}/zeno/${MODULE_NAME}.hpp" DESTINATION "include/zeno")